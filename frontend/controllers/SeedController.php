<?php
/**
 * Created by PhpStorm.
 * User: ssj
 * Date: 16-1-1
 * Time: 上午3:40
 */

namespace frontend\controllers;

use common\library\MetaInfoProcessor;
use common\library\TorrentFileTool;
use frontend\models\History;
use frontend\models\SeedOperationRecord;
use frontend\models\SeedOperationRecordQuery;
use frontend\models\SeedSearchForm;
use frontend\models\User;
use yii\web\Controller;
use frontend\models\Seed;
use frontend\models\UploadedSeedFile;
use Yii;
use yii\filters\auth\QueryParamAuth;
use yii\web\Response;
use yii\web\UploadedFile;
use yii\filters\ContentNegotiator;
use frontend\models\QuerySeedInfoForm;

class SeedController extends Controller
{
    public $enableCsrfValidation = false;
    public function behaviors()
    {
        $behaviors = parent::behaviors(); // TODO: Change the autogenerated stub
        $behaviors['authenticator'] = [
            'class' => QueryParamAuth::className(),
            'tokenParam' => 'passkey',
        ];
        $behaviors[] = [
                'class' => 'yii\filters\ContentNegotiator',
                'formats' => [
                    'application/json' => Response::FORMAT_JSON,
                ],
        ];
        return $behaviors;
    }

    public function actionUpload()
    {
        $seedModel = new UploadedSeedFile();
        if (Yii::$app->request->isPost) {
            $response = [];
            $seedModel->torrentFile = UploadedFile::getInstanceByName('torrentFile');
            $seedModel->attributes = Yii::$app->request->post();
            Yii::info($seedModel->torrentFile);
            $retval = null;
            $res = $seedModel->upload($retval);
            Yii::info($retval);
            $response['result'] = $retval;
            if ($retval == 'succeed') {
                $response['extra'] = $res->attributes;
            } else {
                $response['extra'] = $seedModel->errors;
            }
        } else {
            $response['result'] = 'failed';
            $response['extra'] = 'method not post';
        }
        Yii::info($response);
        return $response;
    }

    public function actionInfo()
    {
        $model = new QuerySeedInfoForm();
        $model->attributes = Yii::$app->request->post();
        $ret = $model->getResult();
        $result = [];
        if (empty($ret)) {
            $result['result'] = 'failed';
        } else {
            $result['result'] = 'succeed';
            $result['extra'] = $ret;
        }
        Yii::info($result);
        return $result;
    }

    public function actionDownload($seed_id)
    {
        $seed = Seed::findOne($seed_id);
        if (empty($seed)) {
            return [
                'result' => 'failed',
                'reason' => 'no such seed',
            ];
        }

        $main_tracker = "http://127.0.0.1/seed/index.php?r=tracker/announce&";
        //鉴于announce_list实际上是扩展，经过实验，如果有announce_list，
        //announce就不再起作用，所以把main_tracker放到list的第一个
        $secondary_tracker = [
            $main_tracker,
//            "http://10.254.36.2:9001/",
//            "http://tracker1.bevip.xyz:8081/",
//            "http://tracker2.bevip.xyz:8082/",
//            "http://tracker3.bevip.xyz:8083/",
//            "http://tracker4.bevip.xyz:8084/"
        ];
        $info_path = getcwd() . "/torrents/" . $seed['info_hash'] . '.info';

        $torrent = TorrentFileTool::buildTorrentFile(
            $info_path,
            $main_tracker,
            $secondary_tracker
        );
        return Yii::$app->response->sendContentAsFile(
            $torrent,
            $seed['torrent_name'] . '.torrent'
        );
    }

    public function actionGetFormJson($fid)
    {
        $ret['json'] = UploadedSeedFile::getMetaInfo($fid);
        $ret['result'] = empty($ret['json']) ? 'failed' : 'succeed';
        return $ret;
    }

    public function actionDelete($seed_id, $reason = "", $penalty = 0)
    {
        if (!is_numeric($penalty) || !is_numeric($seed_id)) {
            return [
                'result' => 'failed',
                'extra' => 'illegal param'
            ];
        }
        $penalty = intval($penalty);
        $seed_id = intval($seed_id);
        /** @var User $user */
        $user = User::findOne(Yii::$app->user->identity->getId());
        if ($user->priv != 'Admin') {
            return [
                'result' => 'failed',
                'reason' => 'permission denied'
            ];
        }
        /** @var Seed $seed */
        $seed = Seed::findOne($seed_id);
        if (empty($seed) || !$seed->is_valid) {
            return [
                'result' => 'failed',
                'reason' => 'not exists'
            ];
        }
        $ret['result'] = 'success';
        $publisher = $seed->publisher;
        $record = new SeedOperationRecord();
        $record->admin_id = $user->user_id;
        $record->publisher_id = $publisher->user_id;
        $record->seed_id = $seed->seed_id;
        $record->operation_type = "DELETE";
        $record->detail_info = json_encode([
            'penalty' => $penalty,
            'reason' => $reason
        ]);
        $record->insert();
        $seed->is_valid = false;
        $seed->save();
        $publisher->stat_up -= $penalty;
        $publisher->save();
        $tmp = $seed->attributes;
        $tmp['discuz_pub_uid'] = $publisher->discuz_user_id;
        //查询所有下载过这个种子的人
        $res = History::find()
            ->leftJoin(
                User::tableName(),
                User::tableName() . '.user_id=' . History::tableName() . ".user_id"
            )
            ->where([
            'seed_id' => $seed->seed_id
            ])->groupBy([History::tableName() . ".user_id", "history_id"])->all();
        Yii::info($res);
        foreach ($res as $r) {
            $tmp['discuz_use_uid'][] = $r->user->discuz_user_id;
        }
        $ret['extra'] = $tmp;
        Yii::info($ret);
        return $ret;
    }

    /**
     * @param int $seed_id
     * @param int $upcoe
     * @param int $downcoe
     * @param int $duration 该系数的持续时间,后面会转换成到期时间,0表示永久
     * @param string $reason
     * @return array
     * @throws \Exception
     */
    public function actionSetCoef($seed_id, $upcoe, $downcoe, $duration, $reason)
    {
        $ret = [];
        $ret['result'] = 'failed';
        if (!is_numeric($upcoe) || !is_numeric($downcoe) ||
            !is_numeric($duration) || !is_numeric($seed_id)) {
            $ret['reason'] = 'permission denied';
            return $ret;
        }
        /** @var User $user */
        $user = User::findOne(Yii::$app->user->identity->getId());
        if ($user->priv != 'Admin') {
            $ret['reason'] = 'permission denied';
            return $ret;
        }

        /** @var Seed $seed */
        $seed = Seed::findOne($seed_id);
        if (empty($seed) || !$seed->is_valid) {
            $ret['reason'] = 'not exists';
            return $ret;
        }

        $ret['result'] = 'success';
        $publisher = $seed->publisher;
        $record = new SeedOperationRecord();
        $record->admin_id = $user->user_id;
        $record->publisher_id = $publisher->user_id;
        $record->seed_id = $seed->seed_id;
        $record->operation_type = "SETCOEF";
        $record->detail_info = json_encode([
            'reason' => $reason,
            'up_coe' => $upcoe,
            'down_coe' => $downcoe,
            'expire_time' => $duration,
        ]);
        $record->insert();
        $coef = $seed->getCoefArray();
        $coef_item = [
            intval($upcoe),
            intval($downcoe),
            0,
        ];

        //如果是永久有效，就直接替换栈顶的条目
        if ($duration != 0) {
            $coef_item[2] = intval($duration) + time();
            $old_duration = $coef[0][2] - time();
            //以前的持续时间比这个短，就直接把以前的替换掉
            if ($old_duration < $duration) {
                $coef[0] = $coef_item;
            } else {
                array_unshift($coef, $coef_item);
            }
        } else {
            $coef_item[2] = 0;
            $coef[0] = $coef_item;
        }
        $seed->setCoefArray($coef);
        $seed->save();
        $tmp = $seed->attributes;
        $tmp['discuz_pub_uid'] = $publisher->discuz_user_id;
        $ret['extra'] = $tmp;
        Yii::info($ret);
        return $ret;
    }

    public function actionSearch()
    {
        $form = new SeedSearchForm();
        $form->attributes = Yii::$app->request->post();
        if (!$form->validate()) {
            $res =  [
                'result' => 'failed',
                'extra' => $form->errors
            ];
        } else {
            $seeds = $form->searchSeeds();
            $res =  [
                'result' => 'succeed',
            ];
            $res['extra'] = [];
            /** @var Seed $seed */
            foreach ($seeds as $seed) {
                $res['extra'][] = $seed->seed_id;
            }
        }
        Yii::info($res);
        return $res;
    }
}
